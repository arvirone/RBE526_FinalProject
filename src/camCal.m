% Auto-generated by cameraCalibrator app on 01-Oct-2023
%-------------------------------------------------------


% Define images to process
imageFileNames = {'/home/wmerry/RBE526/camera_calibration/Image1.png',...
    '/home/wmerry/RBE526/camera_calibration/Image2.png',...
    '/home/wmerry/RBE526/camera_calibration/Image3.png',...
    '/home/wmerry/RBE526/camera_calibration/Image4.png',...
    '/home/wmerry/RBE526/camera_calibration/Image5.png',...
    '/home/wmerry/RBE526/camera_calibration/Image6.png',...
    '/home/wmerry/RBE526/camera_calibration/Image7.png',...
    '/home/wmerry/RBE526/camera_calibration/Image8.png',...
    '/home/wmerry/RBE526/camera_calibration/Image10.png',...
    '/home/wmerry/RBE526/camera_calibration/Image11.png',...
    '/home/wmerry/RBE526/camera_calibration/Image12.png',...
    '/home/wmerry/RBE526/camera_calibration/Image13.png',...
    '/home/wmerry/RBE526/camera_calibration/Image14.png',...
    '/home/wmerry/RBE526/camera_calibration/Image16.png',...
    '/home/wmerry/RBE526/camera_calibration/Image17.png',...
    '/home/wmerry/RBE526/camera_calibration/Image18.png',...
    '/home/wmerry/RBE526/camera_calibration/Image19.png',...
    '/home/wmerry/RBE526/camera_calibration/Image21.png',...
    '/home/wmerry/RBE526/camera_calibration/Image22.png',...
    '/home/wmerry/RBE526/camera_calibration/Image29.png',...
    '/home/wmerry/RBE526/camera_calibration/Image30.png',...
    '/home/wmerry/RBE526/camera_calibration/Image35.png',...
    '/home/wmerry/RBE526/camera_calibration/Image37.png',...
    '/home/wmerry/RBE526/camera_calibration/Image39.png',...
    '/home/wmerry/RBE526/camera_calibration/Image41.png',...
    '/home/wmerry/RBE526/camera_calibration/Image42.png',...
    '/home/wmerry/RBE526/camera_calibration/Image44.png',...
    '/home/wmerry/RBE526/camera_calibration/Image46.png',...
    '/home/wmerry/RBE526/camera_calibration/Image47.png',...
    };
% Detect calibration pattern in images
detector = vision.calibration.monocular.CheckerboardDetector();
[imagePoints, imagesUsed] = detectPatternPoints(detector, imageFileNames);
imageFileNames = imageFileNames(imagesUsed);

% Read the first image to obtain image size
originalImage = imread(imageFileNames{1});
[mrows, ncols, ~] = size(originalImage);

% Generate world coordinates for the planar pattern keypoints
squareSize = 25;  % in units of 'millimeters'
worldPoints = generateWorldPoints(detector, 'SquareSize', squareSize);

% Calibrate the camera using fisheye parameters
[cameraParams, imagesUsed, estimationErrors] = estimateFisheyeParameters(imagePoints, worldPoints, ...
    [mrows, ncols], ...
    'EstimateAlignment', false, ...
    'WorldUnits', 'millimeters');

% View reprojection errors 
h1=figure; showReprojectionErrors(cameraParams);

% Visualize pattern locations
h2=figure; showExtrinsics(cameraParams, 'CameraCentric');

% Display parameter estimation errors
displayErrors(estimationErrors, cameraParams);

% For example, you can use the calibration data to remove effects of lens distortion.
undistortedImage = undistortFisheyeImage(originalImage, cameraParams.Intrinsics);

% See additional examples of how to use the calibration data.  At the prompt type:
% showdemo('MeasuringPlanarObjectsExample')
% showdemo('StructureFromMotionExample')
